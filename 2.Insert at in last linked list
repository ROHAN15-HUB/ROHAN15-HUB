
#include <stdio.h>
#include <stdlib.h>
struct node {
 int data; 
 struct node *next; 
};
void traversal(struct node *t) {
 while (t != NULL) { 
 printf("Element is %d\n", t->data); 
 t = t->next; 
 }
}
struct node *insert_at_first(struct node *p, int data) {
 struct node *ptr = (struct node *)malloc(sizeof(struct 
node));
 ptr->next = p;
 ptr->data = data;
 return ptr;
}
struct node *insert_at_last(struct node *p, int data) {
 struct node *new_node = (struct node 
*)malloc(sizeof(struct node));
 struct node *last = p;
 
 new_node->data = data;
 new_node->next = NULL;
 
 if (p == NULL) { 
 return new_node;
 }
 while (last->next != NULL) {
 last = last->next;
 }
 
 last->next = new_node;
 return p;
}
int main() {
 struct node *p, *q, *r;
 p = (struct node *)malloc(sizeof(struct node));
 q = (struct node *)malloc(sizeof(struct node));
 r = (struct node *)malloc(sizeof(struct node));
 printf("Enter the value of the first node: ");
 scanf("%d", &p->data);
 printf("Enter the value of the next node: ");
 scanf("%d", &q->data);
 printf("Enter the value of the next node: ");
 scanf("%d", &r->data);
 p->next = q;
 q->next = r;
 r->next = NULL;
 traversal(p);
 int data;
 printf("Enter the data for the new first node: ");
 scanf("%d", &data);
 p = insert_at_first(p, data);
 traversal(p);
 printf("Enter the data for the new last node: ");
 scanf("%d", &data);
 p = insert_at_last(p, data);
 traversal(p);
 // Free the allocated memory
 struct node *temp;
 while (p != NULL) {
 temp = p;
 p = p->next;
 free(temp);
 }
 return 0; 
}
O
