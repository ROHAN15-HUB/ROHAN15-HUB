#include <stdio.h>
#include <stdlib.h>
struct Node {
 int data;
 struct Node* next;
};
struct Stack {
 struct Node* top;
};
struct Stack* createStack() {
 struct Stack* stack = (struct Stack*)malloc(sizeof(struct 
Stack));
 stack->top = NULL;
 return stack;
}
void push(struct Stack* stack, int data) {
 struct Node* newNode = (struct 
Node*)malloc(sizeof(struct Node));
 newNode->data = data;
 newNode->next = stack->top;
 stack->top = newNode;
 printf("Pushed %d onto the stack.\n", data);
}
int pop(struct Stack* stack) {
 if (stack->top == NULL) {
 printf("Stack underflow! Cannot pop from an empty 
stack.\n");
 return -1;
 }
 struct Node* temp = stack->top;
 int poppedData = temp->data;
 stack->top = stack->top->next;
 free(temp);
 return poppedData;
}
void display(struct Stack* stack) {
 if (stack->top == NULL) {
 printf("Stack is empty.\n");
 return;
 }
 struct Node* current = stack->top;
 printf("Stack elements: ");
 while (current != NULL) {
 printf("%d ", current->data);
 current = current->next;
 }
 printf("\n");
}
int main() {
 struct Stack* stack = createStack();
 int choice, value;
 do {
 printf("\nMenu:\n");
 printf("1. Push\n");
 printf("2. Pop\n");
 printf("3. Display\n");
 printf("4. Exit\n");
 printf("Enter your choice: ");
 scanf("%d", &choice);
 switch (choice) {
 case 1:
 printf("Enter value to push: ");
 scanf("%d", &value);
 push(stack, value);
 break;
 case 2:
 value = pop(stack);
 if (value != -1) {
 printf("Popped %d from the stack.\n", value);
 }
 break;
 case 3:
 display(stack);
 break;
 case 4:
 printf("Exiting...\n");
 break;
 default:
 printf("Invalid choice! Please try again.\n");
 }
 } while (choice != 4);
 while (stack->top != NULL) {
 pop(stack);
 }
 free(stack);
 return 0;
}
